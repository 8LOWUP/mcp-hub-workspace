services:
  mysql:
    container_name: mysql-mcp-market-local
    image: mysql:8.0
    ports:
      - target: ${MYSQL_INNER_PORT}
        published: ${MYSQL_OUTER_PORT}
        protocol: tcp
        host_ip: 0.0.0.0
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
    command: --default-authentication-plugin=mysql_native_password
    networks:
      mm_local_network:
        ipv4_address: ${NETWORK_MYSQL_IP}
    restart: always

  redis:
    container_name: redis-mcp-market-local
    image: redis:latest
    ports:
      - target: ${REDIS_INNER_PORT}
        published: ${REDIS_OUTER_PORT}
        protocol: tcp
        host_ip: 0.0.0.0
    command: redis-server --requirepass ${REDIS_PASSWORD}
    networks:
      mm_local_network:
        ipv4_address: ${NETWORK_REDIS_IP}
    restart: always

  mongodb:
    container_name: mongodb-mcp-market-local
    image: mongo:latest
    ports:
      - target: ${MONGODB_INNER_PORT}
        published: ${MONGODB_OUTER_PORT}
        protocol: tcp
        host_ip: 0.0.0.0
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGODB_DATABASE}
    networks:
      mm_local_network:
        ipv4_address: ${NETWORK_MONGODB_IP}
    restart: always
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - ${RABBITMQ_AMQP_PORT}  # AMQP
      - ${RABBITMQ_CONSOLE_PORT} # 관리 콘솔
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    networks:
      - mm_local_network
networks:
  mm_local_network:
    name: mm_local_network
    driver: bridge
    internal: false
    ipam:
      driver: default
      config:
        - subnet: ${NETWORK_SUBNET}
          ip_range: ${NETWORK_IP_RANGE}
          gateway: ${NETWORK_GATEWAY}