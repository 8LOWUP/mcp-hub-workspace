services:
  mysql:
    container_name: mysql-mcp-market-local
    image: mysql:8.0
    ports:
      - target: ${MYSQL_INNER_PORT}
        published: ${MYSQL_OUTER_PORT}
        protocol: tcp
        host_ip: 0.0.0.0
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
    command: --default-authentication-plugin=mysql_native_password
    networks:
      mm_local_network:
        ipv4_address: ${NETWORK_MYSQL_IP}
    restart: always

  redis:
    container_name: redis-mcp-market-local
    image: redis:latest
    ports:
      - target: ${REDIS_INNER_PORT}
        published: ${REDIS_OUTER_PORT}
        protocol: tcp
        host_ip: 0.0.0.0
    command: redis-server --requirepass ${REDIS_PASSWORD}
    networks:
      mm_local_network:
        ipv4_address: ${NETWORK_REDIS_IP}
    restart: always

  mongodb:
    container_name: mongodb-mcp-market-local
    image: mongo:latest
    ports:
      - target: ${MONGODB_INNER_PORT}
        published: ${MONGODB_OUTER_PORT}
        protocol: tcp
        host_ip: 0.0.0.0
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGODB_DATABASE}
    networks:
      mm_local_network:
        ipv4_address: ${NETWORK_MONGODB_IP}
    restart: always
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    depends_on:
      - zookeeper
networks:
  mm_local_network:
    name: mm_local_network
    driver: bridge
    internal: false
    ipam:
      driver: default
      config:
        - subnet: ${NETWORK_SUBNET}
          ip_range: ${NETWORK_IP_RANGE}
          gateway: ${NETWORK_GATEWAY}