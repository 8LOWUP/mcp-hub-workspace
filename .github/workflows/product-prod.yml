name: MCP Hub workspace service - Develop Deploy

on:
  push:
    branches:
      - develop

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # yq 설치 (yaml 파일 편집용)
      - name: Install yq
        run: sudo apt-get update && sudo apt-get install -y yq

      # 코드 체크아웃 (서브 묘듈 포함)
      - name: Checkout Code (with submodules)
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}
          submodules: recursive
      # 서브모듈도 함께 체크아웃

      # config 파일들을 resources 폴더로 복사
      - name: Copy only yml configs
        run: |
          mkdir -p src/main/resources
          cp config/*.yml src/main/resources/

      # Java 17 세팅 (spring boot 빌드용)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Spring Boot 애플리케이션 빌드
      - name: Build with Gradle
        run: |
          chmod +x ./gradlew 
          ./gradlew clean build -x test

      # GCP 로그인
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker asia-northeast3-docker.pkg.dev

      # Docker 이미지 빌드 & 푸시
      # github.event.repository.name을 통해 각 레포지토리 이름을 이미지 이름으로 사용
      - name: Build & Push Docker Image
        run: |
          IMAGE=asia-northeast3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/mcp-marcket-artifact-registry/${{ github.event.repository.name }}
          TAG=${{ github.sha }}
          
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV
          echo "TAG=$TAG" >> $GITHUB_ENV
          
          docker build -t $IMAGE:$TAG -t $IMAGE:latest .
          docker push $IMAGE:$TAG
          docker push $IMAGE:latest

      # GitOps 레포 체크아웃
      - name: Checkout GitOps repo
        uses: actions/checkout@v3
        with:
          repository: 8LOWUP/mcp-hub-infra
          token: ${{ secrets.GH_PAT }}
          path: infra

        # manifest 파일 업데이트 및 푸시 (현재는 바로 푸시하는 전략) todo 각 서비스 별로 수정 필요
      - name: Update manifest with new image
        env:
          IMAGE: ${{ env.IMAGE }}
          TAG: ${{ env.TAG }}
        run: |
          cd infra
          yq -i '.spec.template.spec.containers[0].image = "'$IMAGE:$TAG'"' workspace-deployment.yaml
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git commit -am "[chore] : update workspace image to $IMAGE:$TAG"
          git push

# todo 실행할 때 mcp perfix로 실행되게 하기
